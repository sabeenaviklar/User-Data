{"version":3,"file":"use-custom-compare.esm.js","sources":["../src/useCustomCompareMemoize.ts","../src/useCustomCompareEffect.ts","../src/useCustomCompareLayoutEffect.ts","../src/useCustomCompareCallback.ts","../src/useCustomCompareMemo.ts"],"sourcesContent":["import { useRef, DependencyList } from 'react';\nimport { DepsAreEqual } from './types';\n\nfunction isPrimitive(val: any) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n\nexport function checkDeps<TDependencyList extends DependencyList>(\n  deps: readonly [...TDependencyList],\n  depsAreEqual: DepsAreEqual<TDependencyList>,\n  name: string,\n) {\n  const reactHookName = `React.${name.replace(/CustomCompare/, '')}`;\n\n  if (!(deps instanceof Array) || deps.length === 0) {\n    console.warn(\n      `${name} should not be used with no dependencies. Use ${reactHookName} instead.`,\n    );\n  }\n  if (deps.every(isPrimitive)) {\n    console.warn(\n      `${name} should not be used with dependencies that are all primitive values. Use ${reactHookName} instead.`,\n    );\n  }\n  if (typeof depsAreEqual !== 'function') {\n    console.warn(\n      `${name} should be used with depsEqual callback for comparing deps list`,\n    );\n  }\n}\n\nexport function useCustomCompareMemoize<TDependencyList extends DependencyList>(\n  deps: readonly [...TDependencyList],\n  depsAreEqual: DepsAreEqual<readonly [...TDependencyList]>,\n): readonly [...TDependencyList] {\n  const ref = useRef<readonly [...TDependencyList] | undefined>(undefined);\n  const prevRef = useRef<readonly [...TDependencyList] | undefined>(\n    ref.current,\n  );\n\n  if (prevRef.current === undefined || !depsAreEqual(prevRef.current, deps)) {\n    ref.current = deps;\n  }\n\n  prevRef.current = deps;\n\n  return ref.current as readonly [...TDependencyList];\n}\n","import { useEffect, EffectCallback, DependencyList } from 'react';\nimport { checkDeps, useCustomCompareMemoize } from './useCustomCompareMemoize';\nimport { DepsAreEqual } from './types';\n\nfunction useCustomCompareEffect<TDependencyList extends DependencyList>(\n  effect: EffectCallback,\n  deps: readonly [...TDependencyList],\n  depsAreEqual: DepsAreEqual<readonly [...TDependencyList]>,\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(deps, depsAreEqual, 'useCustomCompareEffect');\n  }\n\n  useEffect(effect, useCustomCompareMemoize(deps, depsAreEqual));\n}\n\nexport default useCustomCompareEffect;\n","import { useLayoutEffect, EffectCallback, DependencyList } from 'react';\nimport { checkDeps, useCustomCompareMemoize } from './useCustomCompareMemoize';\nimport { DepsAreEqual } from './types';\n\nfunction useCustomCompareLayoutEffect<TDependencyList extends DependencyList>(\n  effect: EffectCallback,\n  deps: readonly [...TDependencyList],\n  depsAreEqual: DepsAreEqual<readonly [...TDependencyList]>,\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(deps, depsAreEqual, 'useCustomCompareLayoutEffect');\n  }\n\n  useLayoutEffect(effect, useCustomCompareMemoize(deps, depsAreEqual));\n}\n\nexport default useCustomCompareLayoutEffect;\n","import { useCallback, DependencyList } from 'react';\nimport { checkDeps, useCustomCompareMemoize } from './useCustomCompareMemoize';\nimport { DepsAreEqual } from './types';\n\nfunction useCustomCompareCallback<\n  T extends (...args: any[]) => any,\n  TDependencyList extends DependencyList\n>(\n  callback: T,\n  deps: readonly [...TDependencyList],\n  depsEqual: DepsAreEqual<readonly [...TDependencyList]>,\n): T {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(deps, depsEqual, 'useCustomCompareCallback');\n  }\n\n  return useCallback(callback, useCustomCompareMemoize(deps, depsEqual));\n}\n\nexport default useCustomCompareCallback;\n","import { useMemo, DependencyList } from 'react';\nimport { checkDeps, useCustomCompareMemoize } from './useCustomCompareMemoize';\nimport { DepsAreEqual } from './types';\n\nfunction useCustomCompareMemo<T, TDependencyList extends DependencyList>(\n  factory: () => T,\n  deps: readonly [...TDependencyList],\n  depsAreEqual: DepsAreEqual<readonly [...TDependencyList]>,\n): T {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(deps, depsAreEqual, 'useCustomCompareMemo');\n  }\n\n  return useMemo(factory, useCustomCompareMemoize(deps, depsAreEqual));\n}\n\nexport default useCustomCompareMemo;\n"],"names":[],"mappings":";;AAGA,SAAS,WAAW,CAAC,GAAQ;IAC3B,OAAO,GAAG,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AAClD,CAAC;SAEe,SAAS,CACvB,IAAmC,EACnC,YAA2C,EAC3C,IAAY;IAEZ,IAAM,aAAa,GAAG,WAAS,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAG,CAAC;IAEnE,IAAI,EAAE,IAAI,YAAY,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACjD,OAAO,CAAC,IAAI,CACP,IAAI,sDAAiD,aAAa,cAAW,CACjF,CAAC;KACH;IACD,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;QAC3B,OAAO,CAAC,IAAI,CACP,IAAI,iFAA4E,aAAa,cAAW,CAC5G,CAAC;KACH;IACD,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;QACtC,OAAO,CAAC,IAAI,CACP,IAAI,oEAAiE,CACzE,CAAC;KACH;AACH,CAAC;SAEe,uBAAuB,CACrC,IAAmC,EACnC,YAAyD;IAEzD,IAAM,GAAG,GAAG,MAAM,CAA4C,SAAS,CAAC,CAAC;IACzE,IAAM,OAAO,GAAG,MAAM,CACpB,GAAG,CAAC,OAAO,CACZ,CAAC;IAEF,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;QACzE,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;KACpB;IAED,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IAEvB,OAAO,GAAG,CAAC,OAAwC,CAAC;AACtD;;AC3CA,SAAS,sBAAsB,CAC7B,MAAsB,EACtB,IAAmC,EACnC,YAAyD;IAEzD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,SAAS,CAAC,IAAI,EAAE,YAAY,EAAE,wBAAwB,CAAC,CAAC;KACzD;IAED,SAAS,CAAC,MAAM,EAAE,uBAAuB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;AACjE;;ACVA,SAAS,4BAA4B,CACnC,MAAsB,EACtB,IAAmC,EACnC,YAAyD;IAEzD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,SAAS,CAAC,IAAI,EAAE,YAAY,EAAE,8BAA8B,CAAC,CAAC;KAC/D;IAED,eAAe,CAAC,MAAM,EAAE,uBAAuB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;AACvE;;ACVA,SAAS,wBAAwB,CAI/B,QAAW,EACX,IAAmC,EACnC,SAAsD;IAEtD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,0BAA0B,CAAC,CAAC;KACxD;IAED,OAAO,WAAW,CAAC,QAAQ,EAAE,uBAAuB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;AACzE;;ACbA,SAAS,oBAAoB,CAC3B,OAAgB,EAChB,IAAmC,EACnC,YAAyD;IAEzD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,SAAS,CAAC,IAAI,EAAE,YAAY,EAAE,sBAAsB,CAAC,CAAC;KACvD;IAED,OAAO,OAAO,CAAC,OAAO,EAAE,uBAAuB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;AACvE;;;;"}